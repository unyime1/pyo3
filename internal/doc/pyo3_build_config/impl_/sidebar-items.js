initSidebarItems({"constant":[["ABI3_MAX_MINOR","Maximum Python version that can be used as minimum required Python version with abi3."],["MINIMUM_SUPPORTED_VERSION","Minimum Python version PyO3 supports."],["WINDOWS_ABI3_LIB_NAME",""]],"enum":[["BuildFlag",""],["PythonImplementation",""]],"fn":[["cargo_env_var","Gets an environment variable owned by cargo."],["conda_env_interpreter",""],["cross_compile_from_sysconfigdata","Find cross compilation information from sysconfigdata file"],["cross_compiling","Detect whether we are cross compiling and return an assembled CrossCompileConfig if so."],["cross_compiling_from_cargo_env","Detect whether we are cross compiling from Cargo and `PYO3_CROSS_*` environment variables and return an assembled `CrossCompileConfig` if so."],["cross_compiling_from_to","Detect whether we are cross compiling and return an assembled CrossCompileConfig if so."],["default_abi3_config","Generates “default” interpreter configuration when compiling “abi3” extensions without a working Python interpreter."],["default_cross_compile","Generates “default” cross compilation information for the target."],["default_lib_name_for_target",""],["default_lib_name_unix",""],["default_lib_name_windows",""],["ends_with",""],["env_var","Gets an external environment variable, and registers the build script to rerun if the variable changes."],["escape",""],["find_all_sysconfigdata","Finds `_sysconfigdata*.py` files for detected Python interpreters."],["find_interpreter","Attempts to locate a python interpreter."],["find_sysconfigdata","Finds the sysconfigdata file when the target Python library directory is set."],["get_abi3_version","Gets the minimum supported Python version from PyO3 `abi3-py*` features."],["get_env_interpreter",""],["get_host_interpreter","Locates and extracts the build host Python interpreter configuration."],["have_python_interpreter","Checks if we should look for a Python interpreter installation to get the target interpreter configuration."],["is_abi3","Checks if `abi3` or any of the `abi3-py3*` features is enabled for the PyO3 crate."],["is_cpython_lib_dir",""],["is_extension_module","Checks if the `extension-module` feature is enabled for the PyO3 crate."],["is_linking_libpython","Checks if we need to link to `libpython` for the current build target."],["is_linking_libpython_for_target","Checks if we need to link to `libpython` for the target."],["is_pypy_lib_dir",""],["load_cross_compile_config","Detects the cross compilation target interpreter configuration from all available sources (PyO3 environment variables, Python sysconfigdata, etc.)."],["make_cross_compile_config","Generates an interpreter config suitable for cross-compilation."],["make_interpreter_config","Generates an interpreter config which will be hard-coded into the pyo3-build-config crate. Only used by `pyo3-build-config` build script."],["parse_script_output",""],["parse_sysconfigdata","Parse sysconfigdata file"],["require_libdir_for_target","Checks if we need to discover the Python library directory to link the extension module binary."],["run_python_script","Run a python script using the specified interpreter binary."],["run_python_script_with_envs","Run a python script using the specified interpreter binary with additional environment variables (e.g. PYTHONPATH) set."],["search_lib_dir","recursive search for _sysconfigdata, returns all possibilities of sysconfigdata paths"],["starts_with",""],["target_triple_from_env","Gets the compilation target triple from environment variables set by Cargo."],["unescape",""],["venv_interpreter",""]],"struct":[["BuildFlags","A list of python interpreter compile-time preprocessor defines that we will pick up and pass to rustc via `--cfg=py_sys_config={varname}`; this allows using them conditional cfg attributes in the .rs files, so"],["CrossCompileConfig","Configuration needed by PyO3 to cross-compile for a target platform."],["CrossCompileEnvVars","PyO3-specific cross compile environment variable values"],["InterpreterConfig","Configuration needed by PyO3 to build for the correct Python implementation."],["PythonVersion",""],["Sysconfigdata","Parsed data from Python sysconfigdata file"],["Triple","A target “triple”. Historically such things had three fields, though they’ve added additional fields over time."]]});