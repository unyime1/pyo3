initSidebarItems({"constant":[["NO_ARGUMENTS",""],["__ABS__",""],["__ADD__",""],["__AITER__",""],["__AND__",""],["__ANEXT__",""],["__AWAIT__",""],["__BOOL__",""],["__CLEAR__",""],["__CONCAT__",""],["__CONTAINS__",""],["__DELATTR__",""],["__DELETE__",""],["__DELITEM__",""],["__DIVMOD__",""],["__FLOAT__",""],["__FLOORDIV__",""],["__GETATTRIBUTE__",""],["__GETATTR__",""],["__GETBUFFER__",""],["__GETITEM__",""],["__GET__",""],["__HASH__",""],["__IADD__",""],["__IAND__",""],["__IFLOORDIV__",""],["__ILSHIFT__",""],["__IMATMUL__",""],["__IMOD__",""],["__IMUL__",""],["__INDEX__",""],["__INPLACE_CONCAT__",""],["__INPLACE_REPEAT__",""],["__INT__",""],["__INVERT__",""],["__IOR__",""],["__IPOW__",""],["__IRSHIFT__",""],["__ISUB__",""],["__ITER__",""],["__ITRUEDIV__",""],["__IXOR__",""],["__LEN__",""],["__LSHIFT__",""],["__MATMUL__",""],["__MOD__",""],["__MUL__",""],["__NEG__",""],["__NEXT__",""],["__OR__",""],["__POS__",""],["__POW__",""],["__RADD__",""],["__RAND__",""],["__RDIVMOD__",""],["__RELEASEBUFFER__",""],["__REPEAT__",""],["__REPR__",""],["__RFLOORDIV__",""],["__RICHCMP__",""],["__RLSHIFT__",""],["__RMATMUL__",""],["__RMOD__",""],["__RMUL__",""],["__ROR__",""],["__RPOW__",""],["__RRSHIFT__",""],["__RSHIFT__",""],["__RSUB__",""],["__RTRUEDIV__",""],["__RXOR__",""],["__SETATTR__",""],["__SETITEM__",""],["__SET__",""],["__STR__",""],["__SUB__",""],["__TRUEDIV__",""],["__XOR__",""]],"enum":[["GeneratedPyMethod",""],["PropertyType",""],["PyMethodKind",""],["PyMethodProtoKind",""],["ReturnMode",""],["Ty",""]],"fn":[["check_generic",""],["ensure_function_options_valid",""],["ensure_no_forbidden_protocol_attributes",""],["extract_object",""],["extract_proto_arguments",""],["gen_py_method",""],["generate_method_body",""],["handle_error",""],["impl_call_getter",""],["impl_call_setter",""],["impl_call_slot",""],["impl_py_class_attribute",""],["impl_py_getter_def",""],["impl_py_method_def","Also used by pyfunction."],["impl_py_method_def_new",""],["impl_py_setter_def",""],["impl_traverse_slot",""],["is_proto_method",""],["split_off_python_arg","Split an argument of pyo3::Python from the front of the arg list, if present"]],"macro":[["binary_num_slot_fragment_def",""]],"struct":[["PyMethod",""],["SlotDef",""],["SlotFragmentDef",""],["StaticIdent",""],["TokenGenerator",""]]});