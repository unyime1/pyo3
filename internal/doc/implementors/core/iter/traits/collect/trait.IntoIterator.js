(function() {var implementors = {};
implementors["pyo3"] = [{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"pyo3/types/dict/struct.PyDict.html\" title=\"struct pyo3::types::dict::PyDict\">PyDict</a>","synthetic":false,"types":["pyo3::types::dict::PyDict"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"pyo3/types/frozenset/struct.PyFrozenSet.html\" title=\"struct pyo3::types::frozenset::PyFrozenSet\">PyFrozenSet</a>","synthetic":false,"types":["pyo3::types::frozenset::PyFrozenSet"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"pyo3/types/list/struct.PyList.html\" title=\"struct pyo3::types::list::PyList\">PyList</a>","synthetic":false,"types":["pyo3::types::list::PyList"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"pyo3/types/set/struct.PySet.html\" title=\"struct pyo3::types::set::PySet\">PySet</a>","synthetic":false,"types":["pyo3::types::set::PySet"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"struct\" href=\"pyo3/types/tuple/struct.PyTuple.html\" title=\"struct pyo3::types::tuple::PyTuple\">PyTuple</a>","synthetic":false,"types":["pyo3::types::tuple::PyTuple"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()