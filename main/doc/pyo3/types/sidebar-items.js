initSidebarItems({"enum":[["PyStringData","Represents raw data backing a Python `str`."]],"mod":[["iter","Iteration over Python collections."]],"struct":[["PyAny","Represents any Python object."],["PyBool","Represents a Python `bool`."],["PyByteArray","Represents a Python `bytearray`."],["PyBytes","Represents a Python `bytes` object."],["PyCFunction","Represents a builtin Python function object."],["PyCapsule","Represents a Python Capsule as described in Capsules:"],["PyCode","Represents a Python code object."],["PyComplex","Represents a Python `complex` object."],["PyDate","Bindings around `datetime.date`"],["PyDateTime","Bindings for `datetime.datetime`"],["PyDelta","Bindings for `datetime.timedelta`"],["PyDict","Represents a Python `dict`."],["PyFloat","Represents a Python `float` object."],["PyFrame","Represents a Python frame."],["PyFrozenSet","Represents a  Python `frozenset`"],["PyFunction","Represents a Python function object."],["PyInt","Represents a Python `int` object."],["PyIterator","A Python iterator object."],["PyList","Represents a Python `list`."],["PyLong","Represents a Python `int` object."],["PyMapping","Represents a reference to a Python object supporting the mapping protocol."],["PyModule","Represents a Python `module` object."],["PySequence","Represents a reference to a Python object supporting the sequence protocol."],["PySet","Represents a Python `set`"],["PySlice","Represents a Python `slice`."],["PySliceIndices","Represents Python `slice` indices."],["PyString","Represents a Python `string` (a Unicode string object)."],["PyTime","Bindings for `datetime.time`"],["PyTraceback","Represents a Python traceback."],["PyTuple","Represents a Python `tuple` object."],["PyType","Represents a reference to a Python `type object`."],["PyTzInfo","Bindings for `datetime.tzinfo`"],["PyUnicode","Represents a Python `string` (a Unicode string object)."]],"trait":[["IntoPyDict","Conversion trait that allows a sequence of tuples to be converted into `PyDict` Primary use case for this trait is `call` and `call_method` methods as keywords argument."],["PyDateAccess","Trait for accessing the date components of a struct containing a date."],["PyDeltaAccess","Trait for accessing the components of a struct containing a timedelta."],["PyTimeAccess","Trait for accessing the time components of a struct containing a time."],["PyTzInfoAccess","Trait for accessing the components of a struct containing a tzinfo."]]});